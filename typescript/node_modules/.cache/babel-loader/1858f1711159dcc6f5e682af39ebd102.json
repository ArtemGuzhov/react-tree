{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mcc-tomsk\\\\src\\\\components\\\\Note.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport List from './List';\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = ({\n  note\n}) => {\n  _s();\n\n  const [children, setChildren] = useState([]);\n  const [goals, setGoals] = React.useState([]);\n  useEffect(() => {\n    setChildren(note.childrens);\n  }, []);\n\n  const setChildrenHandler = id => {\n    const newElem = {\n      _id: v4(),\n      title: 'kek',\n      childrens: []\n    };\n\n    if (note._id === id) {\n      setChildren(prev => [...prev, newElem]);\n    } // setGoals((curGoals) => [...curGoals, { key: Math.random().toString(), value: input }])\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => console.log(note._id),\n    children: [note.title, /*#__PURE__*/_jsxDEV(List, {\n      items: children,\n      renderItem: note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Note, \"9VOgOSb3cgWM5RzO/CW+ordPubc=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["C:/Projects/mcc-tomsk/src/components/Note.tsx"],"names":["React","useEffect","useState","List","v4","Note","note","children","setChildren","goals","setGoals","childrens","setChildrenHandler","id","newElem","_id","title","prev","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAT,QAAmB,MAAnB;;;AAMA,MAAMC,IAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAe,EAAf,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACE,QAAN,CAKxB,EALwB,CAA1B;AAOAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACF,IAAI,CAACK,SAAN,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,kBAAkB,GAAIC,EAAD,IAAgB;AACzC,UAAMC,OAAO,GAAG;AAAEC,MAAAA,GAAG,EAAEX,EAAE,EAAT;AAAaY,MAAAA,KAAK,EAAE,KAApB;AAA2BL,MAAAA,SAAS,EAAE;AAAtC,KAAhB;;AAEA,QAAIL,IAAI,CAACS,GAAL,KAAaF,EAAjB,EAAqB;AACnBL,MAAAA,WAAW,CAAES,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUH,OAAV,CAAX,CAAX;AACD,KALwC,CAOzC;;AACD,GARD;;AAUA,sBACE;AAAI,IAAA,OAAO,EAAE,MAAMI,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACS,GAAjB,CAAnB;AAAA,eACGT,IAAI,CAACU,KADR,eAEE,QAAC,IAAD;AACE,MAAA,KAAK,EAAET,QADT;AAEE,MAAA,UAAU,EAAGD,IAAD,iBAAiB,QAAC,IAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAWA,IAAI,CAACS,GAAhB;AAAA;AAAA;AAAA;AAAA;AAF/B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhCD;;GAAMV,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\r\nimport { INote } from '../types'\r\nimport List from './List'\r\nimport { v4 } from 'uuid'\r\n\r\ninterface NoteProps {\r\n  note: INote\r\n}\r\n\r\nconst Note: FC<NoteProps> = ({ note }) => {\r\n  const [children, setChildren] = useState<Array<INote>>([])\r\n  const [goals, setGoals] = React.useState<\r\n    Array<{\r\n      key: string\r\n      value: string\r\n    }>\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    setChildren(note.childrens)\r\n  }, [])\r\n\r\n  const setChildrenHandler = (id: string) => {\r\n    const newElem = { _id: v4(), title: 'kek', childrens: [] }\r\n\r\n    if (note._id === id) {\r\n      setChildren((prev) => [...prev, newElem])\r\n    }\r\n\r\n    // setGoals((curGoals) => [...curGoals, { key: Math.random().toString(), value: input }])\r\n  }\r\n\r\n  return (\r\n    <li onClick={() => console.log(note._id)}>\r\n      {note.title}\r\n      <List\r\n        items={children}\r\n        renderItem={(note: INote) => <Note key={note._id} note={note} />}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}