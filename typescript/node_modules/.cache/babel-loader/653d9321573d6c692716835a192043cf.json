{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mcc-tomsk\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from 'react';\n// const tree = [\n//   {\n//     name: 'node1',\n//     subNodes: [\n//       {\n//         name: 'node1-1',\n//         subNodes: [],\n//       },\n//       {\n//         name: 'node1-2',\n//         subNodes: [],\n//       },\n//     ],\n//   },\n//   {\n//     name: 'node2',\n//     subNodes: [],\n//   },\n//   {\n//     name: 'node3',\n//     subNodes: [\n//       {\n//         name: 'node3-1',\n//         subNodes: [\n//           {\n//             name: 'node3-1-1',\n//             subNodes: [],\n//           },\n//           {\n//             name: 'node3-1-2',\n//             subNodes: [],\n//           },\n//         ],\n//       },\n//       {\n//         name: 'node3-2',\n//         subNodes: [],\n//       }\n//     ],\n//   },\n// ];\n// class App extends Component {\n//   renderSubNodes(subNodes: Array<[]>) {\n//     return (\n//       <ul>\n//         {subNodes.map(({name: string<''>, subNode: Array<[]>}) => (\n//           <li>\n//               {name}\n//               {this.renderSubNodes(subNodes)}\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n//   render() {\n//     return(\n//       <React.Fragment>\n//         <h1>Hello World!</h1>\n//         {this.renderSubNodes(tree)}\n//       </React.Fragment>\n//     )\n//   }\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState([{\n    name: 'Artem',\n    _id: '1',\n    roots: [],\n    branches: [{\n      name: 'Artem2',\n      _id: '1',\n      roots: [],\n      branches: [{\n        name: 'Artem3',\n        _id: '1',\n        roots: [],\n        branches: []\n      }, {\n        name: 'Ivan3',\n        _id: '2',\n        roots: [],\n        branches: []\n      }]\n    }]\n  }]);\n\n  const renderState = state => {\n    console.log(state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.map((item, index) => {\n        console.log(typeof item.branches);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderState(state)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"n5YU4cTzXXuO1SEZZ+6AKlsjXMI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Projects/mcc-tomsk/src/App.tsx"],"names":["React","useState","App","state","setState","name","_id","roots","branches","renderState","console","log","map","item","index"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAW,CAC3C;AACEI,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,GAAG,EAAE,GAFP;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,QAAQ,EAAE,CACR;AACEH,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,GAAG,EAAE,GAFP;AAGEC,MAAAA,KAAK,EAAE,EAHT;AAIEC,MAAAA,QAAQ,EAAE,CACR;AAAEH,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,GAAG,EAAE,GAAvB;AAA4BC,QAAAA,KAAK,EAAE,EAAnC;AAAuCC,QAAAA,QAAQ,EAAE;AAAjD,OADQ,EAER;AAAEH,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,GAAG,EAAE,GAAtB;AAA2BC,QAAAA,KAAK,EAAE,EAAlC;AAAsCC,QAAAA,QAAQ,EAAE;AAAhD,OAFQ;AAJZ,KADQ;AAJZ,GAD2C,CAAX,CAAlC;;AAmBA,QAAMC,WAAW,GAAIN,KAAD,IAA0B;AAC5CO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,wBACE;AAAA,gBACGA,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAOE,IAAI,CAACL,QAAxB;AAEA,4BACE;AAAA,oBACGK,IAAI,CAACR;AADR,WAAUS,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAjBD;;AAmBA,sBAAO;AAAA,cAAML,WAAW,CAACN,KAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAxCQD,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["// import React, { Component } from 'react';\n\n// const tree = [\n//   {\n//     name: 'node1',\n//     subNodes: [\n//       {\n//         name: 'node1-1',\n//         subNodes: [],\n//       },\n//       {\n//         name: 'node1-2',\n//         subNodes: [],\n//       },\n//     ],\n//   },\n//   {\n//     name: 'node2',\n//     subNodes: [],\n//   },\n//   {\n//     name: 'node3',\n//     subNodes: [\n//       {\n//         name: 'node3-1',\n//         subNodes: [\n//           {\n//             name: 'node3-1-1',\n//             subNodes: [],\n//           },\n//           {\n//             name: 'node3-1-2',\n//             subNodes: [],\n//           },\n//         ],\n//       },\n//       {\n//         name: 'node3-2',\n//         subNodes: [],\n//       }\n//     ],\n//   },\n// ];\n\n// class App extends Component {\n\n//   renderSubNodes(subNodes: Array<[]>) {\n//     return (\n//       <ul>\n//         {subNodes.map(({name: string<''>, subNode: Array<[]>}) => (\n//           <li>\n//               {name}\n//               {this.renderSubNodes(subNodes)}\n//           </li>\n//         ))}\n//       </ul>\n//     );\n//   }\n\n//   render() {\n//     return(\n//       <React.Fragment>\n//         <h1>Hello World!</h1>\n//         {this.renderSubNodes(tree)}\n//       </React.Fragment>\n//     )\n//   }\n// }\n\n// export default App;\n\nimport React, { useState } from 'react'\nimport { IState } from './types'\n\nfunction App() {\n  const [state, setState] = useState<IState[]>([\n    {\n      name: 'Artem',\n      _id: '1',\n      roots: [],\n      branches: [\n        {\n          name: 'Artem2',\n          _id: '1',\n          roots: [],\n          branches: [\n            { name: 'Artem3', _id: '1', roots: [], branches: [] },\n            { name: 'Ivan3', _id: '2', roots: [], branches: [] },\n          ],\n        },\n      ],\n    },\n  ])\n\n  const renderState = (state: Array<IState>) => {\n    console.log(state)\n\n    return (\n      <div>\n        {state.map((item, index) => {\n          console.log(typeof item.branches)\n\n          return (\n            <div key={index}>\n              {item.name}\n              {/* <div>{renderState(...item.branches)}</div> */}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return <div>{renderState(state)}</div>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}