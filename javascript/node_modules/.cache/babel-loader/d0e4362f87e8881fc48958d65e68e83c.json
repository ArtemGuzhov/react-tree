{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\Desktop\\\\mmc\\\\src\\\\components\\\\Tree.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport Child from './Child';\nimport Root from './Root';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tree = () => {\n  _s();\n\n  const [nodes, setNodes] = useState([{\n    id: v4(),\n    name: 'root',\n    children: [{\n      id: v4(),\n      name: 'root',\n      children: [{\n        id: v4(),\n        name: 'root',\n        children: []\n      }]\n    }]\n  }]); // const addRootChildrenNode = (id) => {\n  //   setNodes([\n  //     ...nodes.map((node) => {\n  //       if (node.id === id) {\n  //         return {\n  //           ...node,\n  //           children: [\n  //             ...node.children,\n  //             { id: v4(), name: 'root', children: [] },\n  //           ],\n  //         }\n  //       } else {\n  //         return node\n  //       }\n  //     }),\n  //   ])\n  // }\n  // const deleteRootChildrenNode = (id) => {\n  //   console.log(id, nodes)\n  //   setNodes([...nodes.filter((node) => node.id !== id)])\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [nodes.map(node => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [node.id, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Child, {\n          node: node.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(nodes),\n      children: \"nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNodes([...nodes, {\n        id: v4(),\n        name: 'root',\n        children: []\n      }]),\n      children: \"add node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tree, \"Enolz6EBOi3IG3loOZZyKJBLsYo=\");\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["C:/Users/artem/Desktop/mmc/src/components/Tree.jsx"],"names":["React","useState","v4","Child","Root","Tree","nodes","setNodes","id","name","children","map","node","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAEN,EAAE,EADR;AAEEO,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,EAAE,EAAEN,EAAE,EADR;AAEEO,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,QAAQ,EAAE,CAAC;AAAEF,QAAAA,EAAE,EAAEN,EAAE,EAAR;AAAYO,QAAAA,IAAI,EAAE,MAAlB;AAA0BC,QAAAA,QAAQ,EAAE;AAApC,OAAD;AAHZ,KADQ;AAHZ,GADiC,CAAD,CAAlC,CADiB,CAejB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,eACGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT;AAAA,6BACE;AAAA,mBACGA,IAAI,CAACJ,EADR,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEI,IAAI,CAACF;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAkBE;AAAQ,MAAA,OAAO,EAAE,MAAMG,OAAO,CAACC,GAAR,CAAYR,KAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AACE,MAAA,OAAO,EAAE,MACPC,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEE,QAAAA,EAAE,EAAEN,EAAE,EAAR;AAAYO,QAAAA,IAAI,EAAE,MAAlB;AAA0BC,QAAAA,QAAQ,EAAE;AAApC,OAAX,CAAD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnED;;GAAML,I;;KAAAA,I;AAqEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { v4 } from 'uuid'\r\nimport Child from './Child'\r\nimport Root from './Root'\r\n\r\nconst Tree = () => {\r\n  const [nodes, setNodes] = useState([\r\n    {\r\n      id: v4(),\r\n      name: 'root',\r\n      children: [\r\n        {\r\n          id: v4(),\r\n          name: 'root',\r\n          children: [{ id: v4(), name: 'root', children: [] }],\r\n        },\r\n      ],\r\n    },\r\n  ])\r\n\r\n  // const addRootChildrenNode = (id) => {\r\n  //   setNodes([\r\n  //     ...nodes.map((node) => {\r\n  //       if (node.id === id) {\r\n  //         return {\r\n  //           ...node,\r\n  //           children: [\r\n  //             ...node.children,\r\n  //             { id: v4(), name: 'root', children: [] },\r\n  //           ],\r\n  //         }\r\n  //       } else {\r\n  //         return node\r\n  //       }\r\n  //     }),\r\n  //   ])\r\n  // }\r\n\r\n  // const deleteRootChildrenNode = (id) => {\r\n  //   console.log(id, nodes)\r\n  //   setNodes([...nodes.filter((node) => node.id !== id)])\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {nodes.map((node) => (\r\n        <ul>\r\n          <li>\r\n            {node.id}\r\n            <button>+</button>\r\n            <Child node={node.children} />\r\n          </li>\r\n        </ul>\r\n      ))}\r\n      {/* {nodes.map((node, index) => (\r\n        <Root\r\n          key={node.id}\r\n          node={node}\r\n          addNode={addRootChildrenNode}\r\n          deleteNode={deleteRootChildrenNode}\r\n        />\r\n      ))} */}\r\n      <button onClick={() => console.log(nodes)}>nodes</button>\r\n      <button\r\n        onClick={() =>\r\n          setNodes([...nodes, { id: v4(), name: 'root', children: [] }])\r\n        }\r\n      >\r\n        add node\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tree\r\n"]},"metadata":{},"sourceType":"module"}