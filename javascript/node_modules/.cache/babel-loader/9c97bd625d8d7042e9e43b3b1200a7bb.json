{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\Desktop\\\\mmc\\\\src\\\\components\\\\Root.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport Child from './Child';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Root = ({\n  node,\n  addNode,\n  deleteNode\n}) => {\n  _s();\n\n  const [nodes, setNodes] = useState(node);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [nodes.id, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Root, \"kC0Cs2YL5aQtSSmDuuwXEyzVTOY=\");\n\n_c = Root;\nexport default Root;\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["C:/Users/artem/Desktop/mmc/src/components/Root.jsx"],"names":["React","useEffect","useState","v4","Child","Root","node","addNode","deleteNode","nodes","setNodes","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,IAAD,CAAlC;AAEA,sBACE;AAAA,2BACE;AAAA,iBACGG,KAAK,CAACE,EADT,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMN,I;;KAAAA,I;AAiBN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { v4 } from 'uuid'\r\nimport Child from './Child'\r\n\r\nconst Root = ({ node, addNode, deleteNode }) => {\r\n  const [nodes, setNodes] = useState(node)\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        {nodes.id}\r\n        <button>+</button>\r\n        {/* <button onClick={() => deleteNode(root.id)}>-</button> */}\r\n      </li>\r\n      {/* {root.children.map((node, index) => (\r\n        <Child key={node.id} node={node} addNode={addNodeChildren} />\r\n      ))} */}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Root\r\n"]},"metadata":{},"sourceType":"module"}