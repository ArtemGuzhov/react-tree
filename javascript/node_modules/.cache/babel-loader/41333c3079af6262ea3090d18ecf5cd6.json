{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\Desktop\\\\mmc\\\\src\\\\components\\\\Modal\\\\Modal.jsx\";\nimport React, { useState } from 'react';\nimport styles from './Modal.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  close,\n  variant,\n  list,\n  create,\n  del,\n  rootId,\n  childId\n}) => {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const RootCreate = () => {\n    _s();\n\n    const [value, setValue] = useState('');\n\n    const createHandler = () => {\n      if (value.length !== 0) {\n        if (rootId && !childId) {\n          create(rootId, value);\n        } else if (rootId && childId) {\n          create(rootId, childId, value);\n        } else {\n          create(value);\n        }\n\n        close();\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name of root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: value.length === 0 ? styles.validateInput : styles.input,\n              type: \"text\",\n              placeholder: \"Enter node name...\",\n              value: value,\n              onChange: e => setValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.buttonSubmit,\n              onClick: createHandler,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.buttonCancel,\n              onClick: close,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(RootCreate, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n  const RootDelete = () => {\n    _s2();\n\n    const [value, setValue] = useState(list[0].id);\n\n    const deleteHandler = () => {\n      if (value !== 0) {\n        del(value);\n        close();\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name of root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setValue(e.target.value),\n              value: value,\n              children: list.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.row,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.buttonDelete,\n              onClick: deleteHandler,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.buttonCancel,\n              onClick: close,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s2(RootDelete, \"K40cpV8VYgHhr7jNWSdN81hQS5o=\");\n\n  const ChildrenCreate = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: \"ChildrenCreate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  };\n\n  const modalVariants = {\n    'root-create': /*#__PURE__*/_jsxDEV(RootCreate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }, this),\n    'root-delete': /*#__PURE__*/_jsxDEV(RootDelete, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 20\n    }, this),\n    'children-create': /*#__PURE__*/_jsxDEV(ChildrenCreate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 24\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalRoot,\n    children: modalVariants[variant]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/artem/Desktop/mmc/src/components/Modal/Modal.jsx"],"names":["React","useState","styles","Modal","close","variant","list","create","del","rootId","childId","RootCreate","value","setValue","createHandler","length","modal","container","row","validateInput","input","e","target","buttonSubmit","buttonCancel","RootDelete","id","deleteHandler","map","item","name","buttonDelete","ChildrenCreate","modalVariants","modalRoot"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport styles from './Modal.module.css'\r\n\r\nconst Modal = ({ close, variant, list, create, del, rootId, childId }) => {\r\n  const RootCreate = () => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const createHandler = () => {\r\n      if (value.length !== 0) {\r\n        if (rootId && !childId) {\r\n          create(rootId, value)\r\n        } else if (rootId && childId) {\r\n          create(rootId, childId, value)\r\n        } else {\r\n          create(value)\r\n        }\r\n\r\n        close()\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={styles.modal}>\r\n        <div className={styles.container}>\r\n          <form>\r\n            <div className={styles.row}>\r\n              <label>Name of root</label>\r\n              <input\r\n                className={\r\n                  value.length === 0 ? styles.validateInput : styles.input\r\n                }\r\n                type=\"text\"\r\n                placeholder=\"Enter node name...\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.row}>\r\n              <label className={styles.buttonSubmit} onClick={createHandler}>\r\n                Create\r\n              </label>\r\n              <label className={styles.buttonCancel} onClick={close}>\r\n                Cancel\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const RootDelete = () => {\r\n    const [value, setValue] = useState(list[0].id)\r\n\r\n    const deleteHandler = () => {\r\n      if (value !== 0) {\r\n        del(value)\r\n        close()\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={styles.modal}>\r\n        <div className={styles.container}>\r\n          <form>\r\n            <div className={styles.row}>\r\n              <label>Name of root</label>\r\n              <select onChange={(e) => setValue(e.target.value)} value={value}>\r\n                {list.map((item) => (\r\n                  <option value={item.id}>{item.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className={styles.row}>\r\n              <label className={styles.buttonDelete} onClick={deleteHandler}>\r\n                Delete\r\n              </label>\r\n              <label className={styles.buttonCancel} onClick={close}>\r\n                Cancel\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const ChildrenCreate = () => {\r\n    return <div className={styles.modal}>ChildrenCreate</div>\r\n  }\r\n\r\n  const modalVariants = {\r\n    'root-create': <RootCreate />,\r\n    'root-delete': <RootDelete />,\r\n    'children-create': <ChildrenCreate />,\r\n  }\r\n\r\n  return <div className={styles.modalRoot}>{modalVariants[variant]}</div>\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}