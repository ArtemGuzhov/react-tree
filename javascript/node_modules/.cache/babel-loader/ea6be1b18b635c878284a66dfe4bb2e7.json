{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\Desktop\\\\mmc\\\\src\\\\components\\\\Child.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Child = ({\n  node,\n  id,\n  addNode,\n  deleteNode,\n  idRootOfTree,\n  setNewStateNodes\n}) => {\n  _s();\n\n  const [children, setChildren] = useState(node);\n  const rootId = id;\n\n  const addChildrenNode = (id, childId) => {\n    console.log(children);\n    setChildren([...children.map(node => {\n      if (node.id === id) {\n        return { ...node,\n          children: [...node.children.map(item => {\n            if (item.id === childId) {\n              return { ...item,\n                children: [...item.children, {\n                  id: v4(),\n                  name: 'child',\n                  children: []\n                }]\n              };\n            } else {\n              return item;\n            }\n          })]\n        };\n      } else {\n        return node;\n      }\n    })]);\n  };\n\n  useEffect(() => {\n    setChildren(children);\n  }, [children]);\n  useEffect(() => {\n    if (idRootOfTree) {\n      setNewStateNodes(idRootOfTree, children); // console.log('Потомки изменены')\n    }\n  }, [children]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: children.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [node.id, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(rootId, node.id),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteNode(rootId, node.id),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(children),\n        children: \"log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Child, {\n        node: node.children,\n        id: node.id,\n        addNode: addChildrenNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Child, \"M5ItW0rvoBB0w0F8BKRXMTJ80I0=\");\n\n_c = Child;\nexport default Child;\n\nvar _c;\n\n$RefreshReg$(_c, \"Child\");","map":{"version":3,"sources":["C:/Users/artem/Desktop/mmc/src/components/Child.jsx"],"names":["React","useEffect","useState","v4","Child","node","id","addNode","deleteNode","idRootOfTree","setNewStateNodes","children","setChildren","rootId","addChildrenNode","childId","console","log","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,MAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,IADa;AAEbC,EAAAA,EAFa;AAGbC,EAAAA,OAHa;AAIbC,EAAAA,UAJa;AAKbC,EAAAA,YALa;AAMbC,EAAAA;AANa,CAAD,KAOR;AAAA;;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACG,IAAD,CAAxC;AACA,QAAMQ,MAAM,GAAGP,EAAf;;AAEA,QAAMQ,eAAe,GAAG,CAACR,EAAD,EAAKS,OAAL,KAAiB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAC,IAAAA,WAAW,CAAC,CACV,GAAGD,QAAQ,CAACO,GAAT,CAAcb,IAAD,IAAU;AACxB,UAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL,GAAGD,IADE;AAELM,UAAAA,QAAQ,EAAE,CACR,GAAGN,IAAI,CAACM,QAAL,CAAcO,GAAd,CAAmBC,IAAD,IAAU;AAC7B,gBAAIA,IAAI,CAACb,EAAL,KAAYS,OAAhB,EAAyB;AACvB,qBAAO,EACL,GAAGI,IADE;AAELR,gBAAAA,QAAQ,EAAE,CACR,GAAGQ,IAAI,CAACR,QADA,EAER;AAAEL,kBAAAA,EAAE,EAAEH,EAAE,EAAR;AAAYiB,kBAAAA,IAAI,EAAE,OAAlB;AAA2BT,kBAAAA,QAAQ,EAAE;AAArC,iBAFQ;AAFL,eAAP;AAOD,aARD,MAQO;AACL,qBAAOQ,IAAP;AACD;AACF,WAZE,CADK;AAFL,SAAP;AAkBD,OAnBD,MAmBO;AACL,eAAOd,IAAP;AACD;AACF,KAvBE,CADO,CAAD,CAAX;AA0BD,GA5BD;;AA8BAJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,YAAJ,EAAkB;AAChBC,MAAAA,gBAAgB,CAACD,YAAD,EAAeE,QAAf,CAAhB,CADgB,CAGhB;AACD;AACF,GANQ,EAMN,CAACA,QAAD,CANM,CAAT;AAQA,sBACE;AAAA,cACGA,QAAQ,CAACO,GAAT,CAAcb,IAAD,iBACZ;AAAA,iBACGA,IAAI,CAACC,EADR,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,OAAO,CAACM,MAAD,EAASR,IAAI,CAACC,EAAd,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAME,UAAU,CAACK,MAAD,EAASR,IAAI,CAACC,EAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMU,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEN,IAAI,CAACM,QAAlB;AAA4B,QAAA,EAAE,EAAEN,IAAI,CAACC,EAArC;AAAyC,QAAA,OAAO,EAAEQ;AAAlD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAzED;;GAAMV,K;;KAAAA,K;AA2EN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nconst Child = ({\r\n  node,\r\n  id,\r\n  addNode,\r\n  deleteNode,\r\n  idRootOfTree,\r\n  setNewStateNodes,\r\n}) => {\r\n  const [children, setChildren] = useState(node)\r\n  const rootId = id\r\n\r\n  const addChildrenNode = (id, childId) => {\r\n    console.log(children)\r\n    setChildren([\r\n      ...children.map((node) => {\r\n        if (node.id === id) {\r\n          return {\r\n            ...node,\r\n            children: [\r\n              ...node.children.map((item) => {\r\n                if (item.id === childId) {\r\n                  return {\r\n                    ...item,\r\n                    children: [\r\n                      ...item.children,\r\n                      { id: v4(), name: 'child', children: [] },\r\n                    ],\r\n                  }\r\n                } else {\r\n                  return item\r\n                }\r\n              }),\r\n            ],\r\n          }\r\n        } else {\r\n          return node\r\n        }\r\n      }),\r\n    ])\r\n  }\r\n\r\n  useEffect(() => {\r\n    setChildren(children)\r\n  }, [children])\r\n\r\n  useEffect(() => {\r\n    if (idRootOfTree) {\r\n      setNewStateNodes(idRootOfTree, children)\r\n\r\n      // console.log('Потомки изменены')\r\n    }\r\n  }, [children])\r\n\r\n  return (\r\n    <ul>\r\n      {children.map((node) => (\r\n        <li>\r\n          {node.id}\r\n          <button onClick={() => addNode(rootId, node.id)}>+</button>\r\n          <button onClick={() => deleteNode(rootId, node.id)}>-</button>\r\n          <button onClick={() => console.log(children)}>log</button>\r\n\r\n          <Child node={node.children} id={node.id} addNode={addChildrenNode} />\r\n        </li>\r\n      ))}\r\n      {/* {}\r\n        <button onClick={() => addNode(children.id)}>+</button>\r\n        <button onClick={() => deleteNode(children.id)}>+</button> */}\r\n      {/* {children.children.map((node, index) => (\r\n          <Child key={node.id} node={node} />\r\n        ))} */}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Child\r\n"]},"metadata":{},"sourceType":"module"}