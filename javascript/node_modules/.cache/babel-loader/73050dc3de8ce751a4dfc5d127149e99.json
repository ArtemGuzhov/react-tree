{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\Desktop\\\\mmc\\\\src\\\\components\\\\Branch\\\\Branch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport Modal from '../Modal/Modal';\nimport styles from './Branch.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Branch = ({\n  nodeChildren,\n  id,\n  statusUpdateRoot,\n  statusUpdateChildren,\n  setStatusUpdateChildren,\n  updateNodeState,\n  updateChildrenState,\n  addNodeHandler,\n  deleteNodeHandler,\n  renameNodeHandler\n}) => {\n  _s();\n\n  const [children, setChildren] = useState(nodeChildren);\n  const [showModal, setShowModal] = useState(false);\n  const [variant, setVariant] = useState('');\n  const rootId = id;\n\n  const addNodeToChildren = (rootId, childId) => {\n    setChildren([...children.map(node => {\n      if (node.id === rootId) {\n        return { ...node,\n          children: [...node.children.map(child => {\n            if (child.id === childId) {\n              return { ...child,\n                children: [...child.children, {\n                  id: v4(),\n                  name: 'child',\n                  children: []\n                }]\n              };\n            } else {\n              return child;\n            }\n          })]\n        };\n      } else {\n        return node;\n      }\n    })]);\n  };\n\n  const deleteNodeFromChildren = (rootId, childId) => {\n    setChildren([...children.map(node => {\n      if (node.id === rootId) {\n        return { ...node,\n          children: [...node.children.filter(child => child.id !== childId)]\n        };\n      } else {\n        return node;\n      }\n    })]);\n  };\n\n  const renameNodeFromChildren = (rootId, childId, value = 'Hello') => {\n    setChildren([...children.map(node => {\n      if (node.id === rootId) {\n        return { ...node,\n          children: [...node.children.map(child => {\n            if (child.id === childId) {\n              return { ...child,\n                name: value\n              };\n            } else {\n              return child;\n            }\n          })]\n        };\n      } else {\n        return node;\n      }\n    })]);\n  };\n\n  const updateChildren = (id, child) => {\n    setChildren([...children.map(node => {\n      if (node.id === id) {\n        return { ...node,\n          children: child\n        };\n      } else {\n        return node;\n      }\n    })]);\n  };\n\n  useEffect(() => {\n    updateChildrenState(rootId, children);\n  }, [children]);\n  useEffect(() => {\n    if (statusUpdateRoot) {\n      setChildren(nodeChildren);\n    }\n  }, [statusUpdateRoot]);\n  useEffect(() => {\n    if (statusUpdateChildren) {\n      setChildren(nodeChildren);\n      setStatusUpdateChildren();\n    }\n  }, [statusUpdateChildren]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: children && children.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [node.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNodeHandler(rootId, node.id),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNodeHandler(rootId, node.id),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => renameNodeHandler(rootId, node.id),\n          children: \"r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Branch, {\n        nodeChildren: node.children,\n        id: node.id,\n        statusUpdateRoot: statusUpdateRoot,\n        statusUpdateChildren: statusUpdateChildren,\n        setStatusUpdateChildren: setStatusUpdateChildren,\n        updateNodeState: updateNodeState,\n        updateChildrenState: updateChildren,\n        addNodeHandler: addNodeToChildren,\n        deleteNodeHandler: deleteNodeFromChildren,\n        renameNodeHandler: renameNodeFromChildren\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Branch, \"lvWNkZAOY7uu8YnpqGzhavpw8kc=\");\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["C:/Users/artem/Desktop/mmc/src/components/Branch/Branch.jsx"],"names":["React","useEffect","useState","v4","Modal","styles","Branch","nodeChildren","id","statusUpdateRoot","statusUpdateChildren","setStatusUpdateChildren","updateNodeState","updateChildrenState","addNodeHandler","deleteNodeHandler","renameNodeHandler","children","setChildren","showModal","setShowModal","variant","setVariant","rootId","addNodeToChildren","childId","map","node","child","name","deleteNodeFromChildren","filter","renameNodeFromChildren","value","updateChildren"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { v4 } from 'uuid'\r\nimport Modal from '../Modal/Modal'\r\nimport styles from './Branch.module.css'\r\n\r\nconst Branch = ({\r\n  nodeChildren,\r\n  id,\r\n  statusUpdateRoot,\r\n  statusUpdateChildren,\r\n  setStatusUpdateChildren,\r\n  updateNodeState,\r\n  updateChildrenState,\r\n  addNodeHandler,\r\n  deleteNodeHandler,\r\n  renameNodeHandler,\r\n}) => {\r\n  const [children, setChildren] = useState(nodeChildren)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [variant, setVariant] = useState('')\r\n\r\n  const rootId = id\r\n\r\n  const addNodeToChildren = (rootId, childId) => {\r\n    setChildren([\r\n      ...children.map((node) => {\r\n        if (node.id === rootId) {\r\n          return {\r\n            ...node,\r\n            children: [\r\n              ...node.children.map((child) => {\r\n                if (child.id === childId) {\r\n                  return {\r\n                    ...child,\r\n                    children: [\r\n                      ...child.children,\r\n                      { id: v4(), name: 'child', children: [] },\r\n                    ],\r\n                  }\r\n                } else {\r\n                  return child\r\n                }\r\n              }),\r\n            ],\r\n          }\r\n        } else {\r\n          return node\r\n        }\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const deleteNodeFromChildren = (rootId, childId) => {\r\n    setChildren([\r\n      ...children.map((node) => {\r\n        if (node.id === rootId) {\r\n          return {\r\n            ...node,\r\n            children: [\r\n              ...node.children.filter((child) => child.id !== childId),\r\n            ],\r\n          }\r\n        } else {\r\n          return node\r\n        }\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const renameNodeFromChildren = (rootId, childId, value = 'Hello') => {\r\n    setChildren([\r\n      ...children.map((node) => {\r\n        if (node.id === rootId) {\r\n          return {\r\n            ...node,\r\n            children: [\r\n              ...node.children.map((child) => {\r\n                if (child.id === childId) {\r\n                  return {\r\n                    ...child,\r\n                    name: value,\r\n                  }\r\n                } else {\r\n                  return child\r\n                }\r\n              }),\r\n            ],\r\n          }\r\n        } else {\r\n          return node\r\n        }\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const updateChildren = (id, child) => {\r\n    setChildren([\r\n      ...children.map((node) => {\r\n        if (node.id === id) {\r\n          return { ...node, children: child }\r\n        } else {\r\n          return node\r\n        }\r\n      }),\r\n    ])\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateChildrenState(rootId, children)\r\n  }, [children])\r\n\r\n  useEffect(() => {\r\n    if (statusUpdateRoot) {\r\n      setChildren(nodeChildren)\r\n    }\r\n  }, [statusUpdateRoot])\r\n\r\n  useEffect(() => {\r\n    if (statusUpdateChildren) {\r\n      setChildren(nodeChildren)\r\n      setStatusUpdateChildren()\r\n    }\r\n  }, [statusUpdateChildren])\r\n\r\n  return (\r\n    <ul>\r\n      {children &&\r\n        children.map((node) => (\r\n          <div key={node.id}>\r\n            <li>\r\n              {node.name}\r\n              <button onClick={() => addNodeHandler(rootId, node.id)}>+</button>\r\n              <button onClick={() => deleteNodeHandler(rootId, node.id)}>\r\n                -\r\n              </button>\r\n              <button onClick={() => renameNodeHandler(rootId, node.id)}>\r\n                r\r\n              </button>\r\n            </li>\r\n            <Branch\r\n              nodeChildren={node.children}\r\n              id={node.id}\r\n              statusUpdateRoot={statusUpdateRoot}\r\n              statusUpdateChildren={statusUpdateChildren}\r\n              setStatusUpdateChildren={setStatusUpdateChildren}\r\n              updateNodeState={updateNodeState}\r\n              updateChildrenState={updateChildren}\r\n              addNodeHandler={addNodeToChildren}\r\n              deleteNodeHandler={deleteNodeFromChildren}\r\n              renameNodeHandler={renameNodeFromChildren}\r\n            />\r\n          </div>\r\n        ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Branch\r\n"]},"metadata":{},"sourceType":"module"}