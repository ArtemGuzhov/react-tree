{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\Desktop\\\\mmc\\\\src\\\\components\\\\Tree.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport Root from './Root';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tree = () => {\n  _s();\n\n  const [nodes, setNodes] = useState([{\n    id: v4(),\n    name: 'root',\n    children: [{\n      id: v4(),\n      name: 'root',\n      children: [{\n        id: v4(),\n        name: 'root',\n        children: [{\n          id: v4(),\n          name: 'root',\n          children: [{\n            id: v4(),\n            name: 'root',\n            children: []\n          }]\n        }]\n      }]\n    }]\n  }]);\n\n  const addRootChildrenNode = id => {\n    setNodes([...nodes.map(node => {\n      if (node.id === id) {\n        return { ...node,\n          children: [...node.children, {\n            id: v4(),\n            name: 'root',\n            children: []\n          }]\n        };\n      } else {\n        return node;\n      }\n    })]);\n  };\n\n  const deleteRootChildrenNode = id => {\n    setNodes([...nodes.filter(node => node.id !== id)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [nodes.map((node, index) => /*#__PURE__*/_jsxDEV(Root, {\n      node: node,\n      addNode: addRootChildrenNode,\n      deleteNode: deleteRootChildrenNode\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(nodes),\n      children: \"nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNodes([...nodes, {\n        id: v4(),\n        name: 'root',\n        children: []\n      }]),\n      children: \"add node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tree, \"MIHU9rA9X02Ml+VUwKdWv4EDRfM=\");\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["C:/Users/artem/Desktop/mmc/src/components/Tree.jsx"],"names":["React","useState","v4","Root","Tree","nodes","setNodes","id","name","children","addRootChildrenNode","map","node","deleteRootChildrenNode","filter","index","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAEL,EAAE,EADR;AAEEM,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,EAAE,EAAEL,EAAE,EADR;AAEEM,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,EAAE,EAAEL,EAAE,EADR;AAEEM,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,QAAQ,EAAE,CACR;AACEF,UAAAA,EAAE,EAAEL,EAAE,EADR;AAEEM,UAAAA,IAAI,EAAE,MAFR;AAGEC,UAAAA,QAAQ,EAAE,CAAC;AAAEF,YAAAA,EAAE,EAAEL,EAAE,EAAR;AAAYM,YAAAA,IAAI,EAAE,MAAlB;AAA0BC,YAAAA,QAAQ,EAAE;AAApC,WAAD;AAHZ,SADQ;AAHZ,OADQ;AAHZ,KADQ;AAHZ,GADiC,CAAD,CAAlC;;AA0BA,QAAMC,mBAAmB,GAAIH,EAAD,IAAQ;AAClCD,IAAAA,QAAQ,CAAC,CACP,GAAGD,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AACrB,UAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL,GAAGK,IADE;AAELH,UAAAA,QAAQ,EAAE,CACR,GAAGG,IAAI,CAACH,QADA,EAER;AAAEF,YAAAA,EAAE,EAAEL,EAAE,EAAR;AAAYM,YAAAA,IAAI,EAAE,MAAlB;AAA0BC,YAAAA,QAAQ,EAAE;AAApC,WAFQ;AAFL,SAAP;AAOD,OARD,MAQO;AACL,eAAOG,IAAP;AACD;AACF,KAZE,CADI,CAAD,CAAR;AAeD,GAhBD;;AAkBA,QAAMC,sBAAsB,GAAIN,EAAD,IAAQ;AACrCD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACS,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAJ,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,eACGF,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOG,KAAP,kBACT,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEH,IAFR;AAGE,MAAA,OAAO,EAAEF,mBAHX;AAIE,MAAA,UAAU,EAAEG;AAJd,OACOD,IAAI,CAACL,EADZ;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eASE;AAAQ,MAAA,OAAO,EAAE,MAAMS,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AACE,MAAA,OAAO,EAAE,MACPC,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEE,QAAAA,EAAE,EAAEL,EAAE,EAAR;AAAYM,QAAAA,IAAI,EAAE,MAAlB;AAA0BC,QAAAA,QAAQ,EAAE;AAApC,OAAX,CAAD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArED;;GAAML,I;;KAAAA,I;AAuEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { v4 } from 'uuid'\r\nimport Root from './Root'\r\n\r\nconst Tree = () => {\r\n  const [nodes, setNodes] = useState([\r\n    {\r\n      id: v4(),\r\n      name: 'root',\r\n      children: [\r\n        {\r\n          id: v4(),\r\n          name: 'root',\r\n          children: [\r\n            {\r\n              id: v4(),\r\n              name: 'root',\r\n              children: [\r\n                {\r\n                  id: v4(),\r\n                  name: 'root',\r\n                  children: [{ id: v4(), name: 'root', children: [] }],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ])\r\n\r\n  const addRootChildrenNode = (id) => {\r\n    setNodes([\r\n      ...nodes.map((node) => {\r\n        if (node.id === id) {\r\n          return {\r\n            ...node,\r\n            children: [\r\n              ...node.children,\r\n              { id: v4(), name: 'root', children: [] },\r\n            ],\r\n          }\r\n        } else {\r\n          return node\r\n        }\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const deleteRootChildrenNode = (id) => {\r\n    setNodes([...nodes.filter((node) => node.id !== id)])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {nodes.map((node, index) => (\r\n        <Root\r\n          key={node.id}\r\n          node={node}\r\n          addNode={addRootChildrenNode}\r\n          deleteNode={deleteRootChildrenNode}\r\n        />\r\n      ))}\r\n      <button onClick={() => console.log(nodes)}>nodes</button>\r\n      <button\r\n        onClick={() =>\r\n          setNodes([...nodes, { id: v4(), name: 'root', children: [] }])\r\n        }\r\n      >\r\n        add node\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tree\r\n"]},"metadata":{},"sourceType":"module"}